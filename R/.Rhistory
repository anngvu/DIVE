runApp()
head(colnames(xm_t))
runApp()
row.names(xm_t)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
xm_t[, F]
runApp()
runApp()
runApp()
runApp('~/nPOD/nPOD-App/app')
runApp()
runApp()
setwd("~/DIVE/R")
head(xm_t)
usethis::use_data(xm_t)
head(gene_symbols)
usethis::use_data(gene_symbols)
gene_symbols_rev <- setNames(names(gene_symbols), gene_symbols)
head)gene_symbols_rev
head(gene_symbols_rev)
devtools::load_all()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
length(doesnotexist)
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
runApp('~/nPOD/nPOD-App/app/multiVUI')
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
setwd("~/nPOD/nPOD-App/app/Data")
load("px1.Rdata")
head(px1)
px1_t <- as.matrix(px1[, 9:18])
head(px1_)
head(px1_t)
px1_t <- t(px1_t)
colnames(px1_t) <- px1$Entrez
px1_t[1:5, 1:5]
load("px2.Rdata")
head(px2)
ids <- grep("^[0-9]+$", colnames(px2))
ods
ids
ids <- grep("^[0-9]+$", colnames(px2), value = T)
ids
px2_t <- t(as.matrix(px2[, ids]))
px2_t <- t(as.matrix(px2[, ids, with = F]))
colnames(px2_t) <- px2$Entrez
px2_t[1:5, 1:5]
setwd("~/DIVE")
usethis::use_data(px1_t)
usethis::use_data(px2_t)
devtools::load_all()
devtools::load_all()
multiVAppRun()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
x <- get("xm_t")
rm(x)
setwd("~/DIVE/inst/appdata")
write.csv("xm_t", file = "xm_t.csv")
data <- as.matrix(read.csv(paste0("appdata/", input$dataset, ".csv"), header = T))
data <- as.matrix(read.csv("xm_t.csv", header = T))
data[1:5, 1:5]
xm_t[1:5, 1:5]
write.csv(xm_t, file = "xm_t.csv")
data <- as.matrix(read.csv("xm_t.csv", header = T))
data[1:5, 1:5]
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
devtools::load_all()
multiVAppRun()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
setwd("~/nPOD/nPOD-App/app/Ontology")
load("GOTerms.Rdata")
head(GOTerms)
rm(GOTerms)
load("GOBP.Rdata")
head(GO.BP)
load("GObranches.Rdata")
rm(GO.BP)
head(GO.CC)
library(GO.db)
c("")
c()
"A" %in% NULL
!"A" %in% NULL
devtools::load_all()
setwd("~/DIVE")
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
test <- list("A" = 1, "B" =2)
unname(test)
names(test)
test <- unname(test)
test
names(test)
devtools::load_all()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
setdiff(1:2, 2:3)
devtools::load_all()
multiVAppRun()
setdiff(1:3, numeric(0))
setdiff(c(0), 1:3)
setdiff(1:2, 1:3)
test <- list(NA)
names(test) <- "A"
test
dataset <- list()
dataset
length(dataset)
dataset <- list(A = NULL)
dataset
dataset <- list()
is.null(dataset[[1]])
dataset <- list(NULL)
dataset
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
x <- "A"
list(x = 1)
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
system.file("appdata/t1dbase.txt", package = "DIVE")
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
setwd("~/DIVE/R")
match.fun(outer)
x <- match.fun("+")
x(1, 2)
rm(x)
vector(0, length = 5)
vector(length = 5)
devtools::load_all()
devtools::load_all()
runApp('~/nPOD/nPOD-App/app/multiVUI')
devtools::load_all()
runApp('~/nPOD/nPOD-App/app/multiVUI')
devtools::load_all()
runApp('~/nPOD/nPOD-App/app/multiVUI')
system.file("appdata/T1Dbase.txt", package = "DIVE")
devtools::load_all()
runApp('~/nPOD/nPOD-App/app/multiVUI')
devtools::load_all()
runApp('~/nPOD/nPOD-App/app/multiVUI')
which(F == T)
devtools::load_all()
runApp('~/nPOD/nPOD-App/app/multiVUI')
runApp('~/nPOD/nPOD-App/app/multiVUI')
runApp('~/nPOD/nPOD-App/app/multiVUI')
devtools::load_all()
runApp('~/nPOD/nPOD-App/app/multiVUI')
devtools::load_all()
multiVAppRun()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
runApp('~/nPOD/nPOD-App/app/multiVUI')
devtools::load_all()
multiVAppRun()
devtools::load_all()
runApp('~/nPOD/nPOD-App/app/multiVUI')
devtools::load_all()
runApp('~/nPOD/nPOD-App/app/multiVUI')
devtools::load_all()
runApp('~/nPOD/nPOD-App/app/multiVUI')
devtools::load_all()
runApp('~/nPOD/nPOD-App/app/multiVUI')
devtools::load_all()
runApp('~/nPOD/nPOD-App/app/multiVUI')
devtools::load_all()
multiVAppRun()
runApp('~/nPOD/nPOD-App/app/multiVUI')
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
runApp('~/nPOD/nPOD-App/app/multiVUI')
runApp('~/nPOD/nPOD-App/app/multiVUI')
devtools::load_all()
multiVAppRun()
devtools::load_all()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
devtools::load_all()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
library(GO.db)
size(GO)
setwd("~/nPOD/nPOD-App/app/Ontology")
load(GOBP.Rdata)
load("GOBP.Rdata")
head(GO.BP)
object.size(GO.BP)
object.size(GO.BP, "Mb")
object.size(GO.BP, units = "Mb")
object.size(GO.BP, units = "MiB")
object.size(GO.BP, units = "MiB", standard = "IEC")
print(GO.BP, units = "MiB")
print.object.sze(GO.BP, units = "MiB")
print(object.size(GO.BP), units = "MiB")
load(db.Rdata)
load("db.Rdata")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("mygene", version = "3.8")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("mygene", version = "3.8")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("biomaRt", version = "3.8")
install.packages("XML")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("biomaRt", version = "3.8")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("mygene", version = "3.8")
library(mygene)
query("cdk2", species = "human")
query("go:0000307", species = "human")
query("98098dsfdsf", species = "human")
devtools::load_all()
setwd("~/DIVE")
devtools::load_all()
multiVAppRun()
devtools::load_all()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
query("diabetes", species = "human")
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
test <- mygene::query(input$qtext, species = "human")
test <- mygene::query("chrX:", species = "human")
test
test <- tryCatch( { mygene::query("chrX:", species = "human") }, error = function(e) { return(FALSE) } )
test
test <- tryCatch( { mygene::query("CDK2", species = "human") }, error = function(e) { return(FALSE) } )
test
devtools::load_all()
multiVAppRun()
test
test <- NA
test$total > 0
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
paste0("input['", ns("ctrl-dataset"), "'] != ''")
paste0("input['", ("default-ctrl-dataset"), "'] != ''")
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
multiVAppRun()
setwd("~/DIVE/R")
devtools::load_all()
devtools::load_all()
setwd("~/DIVE/R")
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
multiVAppRun()
devtools::load_all()
devtools::load_all()
multiVAppRun()
