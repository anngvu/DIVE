% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dataHelper.R
\name{sideFilterUI}
\alias{sideFilterUI}
\title{Generate a combination of filters}
\usage{
sideFilterUI(
  inputId,
  values,
  type = c("select", "selectize", "checkbox", "checkboxGroup", "range"),
  selected = c("first", "last", "all", "none"),
  conditional = NULL,
  ns = NS(NULL),
  width = 200
)
}
\arguments{
\item{inputId}{The input slot that will be used to access the value.}

\item{values}{Choices for the input, depends on input type.}

\item{type}{One of \code{c("select", "selectize", "checkbox", "checkboxGroup", "range")}, corresponding to
\code{selectInput}, \code{selectizeInput}, \code{checkboxInput}, \code{checkboxGroupInput}, or \code{sliderInput} (range).}

\item{selected}{The initial selection of the input, defaulting to the first of \code{values}.}

\item{conditional}{Optional. If not `NULL`, wrap element in a conditional panel with inital display given by the boolean value.}

\item{ns}{Function for namespacing components, i.e. from `session$ns`.}

\item{width}{Width of input elements.}
}
\description{
Convenient creation of a set of filters using selected inputs
}
\details{
A wrapper for quick creation of Shiny inputs, though limited to certain input types.
Inputs are intended to be used for filtering table data, e.g. each column of a table gets its
own specified input component, which can be of a type enumerated in the parameter \code{type}.
Generally, \code{sliderInput} (range) is appropriate for numeric columns representing continuous data.
while \code{selectInput}, \code{selectizeInput}, \code{checkboxInput} can be used for discrete data,
and \code{checkboxGroupInput} can be used for list columns (if using \code{data.table}).

Whether to initialize the input with none or all of the available values selected will
depend on the data. Imagine a very big table that should at first only show the most relevant
filtered subset -- in this case (and most commonly) it makes the most sense to initialize inputs with
a selection of values that does not lead to rendering the whole table.

The inputs have namespaced IDs "<namespace>-filter-<colname>" by applying the passed-in
namespacing function \code{ns} to \code{id}. To get values in a server function, use \code{\link{filter4j}}.
}
