% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dataUpload.R
\name{dataUploadServer}
\alias{dataUploadServer}
\title{Shiny server module function for user-uploaded data}
\usage{
dataUploadServer(
  id,
  asDT = TRUE,
  removable = FALSE,
  checkFun = NULL,
  appdata = NULL,
  checkappdata = F,
  informd = NULL
)
}
\arguments{
\item{id}{Character ID for specifying namespace, see \code{shiny::\link[shiny]{NS}}.}

\item{asDT}{Logical flag to indicate whether data returned should be a \code{data.table}. If FALSE, \code{readLines} is used on file.}

\item{removable}{Logical flag to indicate whether data upload will have "removable" feature. Defaults to FALSE. See details.}

\item{checkFun}{Optional, a custom check function for an additional layer of checking/modifying uploaded data.
It should return a list containing message and result (result should be \code{NULL} when data fails checks).}

\item{appdata}{Optional, the name (including extension) of one or more files stored in appdata that can be
mock-uploaded. See details.}

\item{checkappdata}{Whether \code{checkFun} should be applied to appdata, normally FALSE.}

\item{informd}{Relative path to the Rmarkdown file, whose contents will be displayed in the modal.}
}
\value{
A \code{data.table} with a "filename" attribute containing the filename without extension,
or \code{NULL} depending on \code{checkFun}, or \code{NULL} if the file was cleared.
}
\description{
Return reactive user-uploaded or mock data after optional checks and modifications
}
\details{
At its most basic, the module returns data from \code{shiny::\link[shiny]{fileInput}}.
However, a function can be optionally integrated with the \code{checkFun} option
to perform additional light data checking or modification operations,
making the the module more tailored for different uses and data expectations.
(For more intense processing that might involve multiple steps and/or side effects as part of a pipeline,
one should really make a specialized module and pass the data into that intermediate module
instead of using \code{checkFun}.)

File uploads can have \emph{reset} behavior by specifying the \code{removable} parameter,
where a remove button will appear after upload, allowing data to be cleared,
after which the module returns \code{NULL}.

Finally, it is possible to perform a mock upload of a saved dataset, triggered externally by another input,
for demonstration purposes. The dataset is expected to be a .csv/.tsv file in
a directory within the app directory. For instance, the relative dataset path can be "appdata/Demo.csv".
}
\seealso{
Other dataUpload functions: 
\code{\link{dataUploadUI}()}
}
\concept{dataUpload functions}
