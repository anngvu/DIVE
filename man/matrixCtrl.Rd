% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/matrixCtrl.R
\name{matrixCtrl}
\alias{matrixCtrl}
\title{Shiny module server functions to generate filter UI for interactive matrix}
\usage{
matrixCtrl(input, output, session, M, N, cdata, metadata = NULL,
  varkey = "VarID", newdata = reactive({ }), widgetmod = NULL,
  widgetopt = NULL)
}
\arguments{
\item{input, output, session}{Standard \code{shiny} boilerplate.}

\item{M}{A non-reactive data matrix, e.g. a correlation matrix, which must have row names.}

\item{N}{A non-reactive matrix of the same dimensions as M, used as a filter layer, e.g. sample size.}

\item{cdata}{The non-reactive data used for generating the matrix.}

\item{metadata}{Optional, a data.table with different types of metadata/annotation to be used as filters.
If \code{NULL}, the only filter option are the row names/index in M.}

\item{varkey}{The column in metadata that maps to row names in M.}

\item{newdata}{Optional, reactive data, e.g. from user upload, that can be merged with M.}

\item{widget}{Optional, associated widget input. See details.}
}
\value{
Reactive state values to be used by the associated plotting module.
}
\description{
Update/populate matrix filter UI options depending on available data and metadata,
as well as handling of user inputs to pass on to appropriate plot objects.
}
\details{
What is available as filters relies on the underlying metadata.
See \code{\link{metadata}} for an example data object that can be passed into the parameter
\preformatted{metadata}. The base UI implements these filters as drop-down selections,
but the UI can also expand/integrate with an optional "add-on" or "augmenting" widget
to provide an alternate, perhaps more intuitive route of filter input.
For example, compared to a drop-down selection of geographical locations,
a map widget would provide a better selection interface. Not all types of metadata
can be integrated with a widget, and the module provides capability for only one widget.
The server function needs to return when the widget should be called (displayed).

The module returns an object representing the original data with user-applied filters,
i.e. the main input to be visualized with \code{\link{interactiveMatrix}}.
}
