% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/matrixCtrl2.R
\name{matrixCtrl2Server}
\alias{matrixCtrl2Server}
\title{Shiny module server functions to control matrix view}
\usage{
matrixCtrl2Server(
  id,
  M = NULL,
  N = NULL,
  P = NULL,
  cutoffP = 0.05,
  cdata = NULL,
  metafilter = reactive({ }),
  newdata = reactive({ }),
  filtervals = NULL
)
}
\arguments{
\item{id}{Character ID for specifying namespace, see \code{shiny::\link[shiny]{NS}}.}

\item{M}{A data matrix, e.g. a correlation matrix, which must have row and column names.}

\item{N}{A matrix of the same dimensions as `M` to be used as a filter layer, e.g. sample size.}

\item{P}{A matrix of the same dimensions as `M` to be used as a filter layer, e.g. p-values.}

\item{cutoffP}{A cutoff value for `P` to be used as default for filtering.}

\item{cdata}{The data used for generating the matrix,
necessary for allowing user-uploaded data to be integrated into mutable `M`.}

\item{metafilter}{Optional reactive data (table) where first column contains rows to be selected
and metadata attributes as additional columns.}

\item{newdata}{Optional reactive data (table) such as a user upload passed in by
the \code{\link{dataUploadServer}} module or from some other component,
and which is suitable for merging with \preformatted{cdata} to calculate a new `M`.}

\item{filtervals}{Optional reactive object for storing filter values that need to be communicated to other modules.}
}
\value{
Reactive values in \code{mstate} object that keeps track of visible matrices
and selected metadata and is used by the associated plotting module.
}
\description{
Create a matrix view that can be visualized with appropriate plotting modules
}
\details{
The module can integrate several types of interactions that control
the view of a matrix. It handles recalculation of the view
and passes on the data to be visualized with
\code{\link{matrixMainServer}} or \code{\link{matrixAsNetworkServer}}.
The base UI implements drop-down selection for basic subsetting of matrix indices
and threshold-type filters, and integrates with other modules providing
new data input or specialized selection interface. For example, for some data
a map widget might provide a better selection interface than a simple
drop-down, thus the map widget module could be implemented separately
and its result communicated as \code{metafilter}.
}
