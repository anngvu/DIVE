install.packages("ontologyIndex")
library(ontologyIndex)
data(go)
children <- get_descendants(go)
children <- sapply(go$children, length)
head(children)
hist(children)
hist(children, breaks = 5)
hist(children, breaks = 1)
density(children)
hist(children, breaks = 500)
hist(children, breaks = 500, xlim = c(0, 100))
hist(children, breaks = 500, xlim = c(0, 50))
summary(children)
which(children == max(children))
go["GO:0043234"]
go$name["GO:0043234"]
hist(children, breaks = 1000, xlim = c(0, 20))
table(children < 50)
table(children < 100)
length(go$name)
load("GOTerms.Rdata")
library(org.Hs.eg.db)
BP <- GOTerms[sapply(GOTerms, Ontology) == "BP"]
genes <- try(select(org.Hs.eg.db, BP, "ENTREZID", "GOID"))
keytypes(org.Hs.eg.db)
genes <- try(select(org.Hs.eg.db, BP, "ENTREZID", "GO"))
genes <- try(select(org.Hs.eg.db, names(BP), "ENTREZID", "GO"))
head(genes)
library(data.table)
genes <- as.data.table(genes)
length(unique(genes$GO))
head(na.omit(genes$ENTREZID))
genesbyGO <- genes[.N, ENTREZID, by = GO]
genesbyGO
genesbyGO <- genes[, .N[ENTREZID], by = GO]
head(genesbyGO)
genesbyGO <- genes[, length(ENTREZID), by = GO]
head(genesbyGO)
hist(genesbyGO$V1)
hist(genesbyGO$V1, breaks = 1000)
summary(genesbyGO$V1)
genesbyGO <- genes[!is.na(ENTREZID), length(ENTREZID), by = GO]
summary(genesbyGO)
11800/30000
head(genesbyGO)
table(genesbyGO$V1 > 200)
table(genesbyGO$V1 > 100)
table(genesbyGO$V1 > 50)
hist(genesbyGO$V1, xlim = 200)
hist(genesbyGO$V1, xlim = c(0, 200))
hist(genesbyGO$V1, xlim = c(0, 200), breaks = 100)
hist(genesbyGO$V1, xlim = c(0, 200), breaks = 200)
hist(genesbyGO$V1, xlim = c(0, 100), breaks = 200)
hist(genesbyGO$V1, xlim = c(0, 100), breaks = 100)
hist(genesbyGO$V1, xlim = c(0, 100), breaks = 50)
hist(genesbyGO$V1, xlim = c(0, 100), breaks = 150)
500/11000
table(genesbyGO$V1 > 40)
table(is.na(c(NA, 0:5)))
table(is.na(c(0:5)))
table(is.na(c(0:5)))$TRUE
is.na(0:5)
is.na(0:5) = T
is.na(0:5) == T
genesbyGO <- genes[, length(ENTREZID[!is.na(ENTREZID)]), by = GO]
head(genesbyGO)
table(genesbyGO$V1 > 0)
genesbyGO <- genes[, Count = length(ENTREZID[!is.na(ENTREZID)]), by = GO]
genesbyGO <- genes[, "Count" = length(ENTREZID[!is.na(ENTREZID)]), by = GO]
genes.BP <- genes[, length(ENTREZID[!is.na(ENTREZID)]), by = GO]
keytypes(org.Hs.eg.db)
names(genes)
head(genes)
names(go)
genes.BP[, GOname := go[GO]]
head(genes.BP)
genes.BP[, GOname := go$name[GO]]
head(genes.BP)
genes.BP <- genes[, .(Count = length(ENTREZID[!is.na(ENTREZID)])), by = GO]
head(genes.BP)
genes.BP[, GOname := go$name[GO]]
head(genes.BP)
rm(genesbyGO)
head(names(GOTerm))
head(genes)
rm(BP)
GO.BP <- GOTerms[sapply(GOTerms, Ontology) == "BP"]
genes.BP <- select(org.Hs.eg.db, names(BP), "ENTREZID", "GO")
genes.BP <- as.data.table(genes.BP)
GO.BP <- genes.BP[, .(Count = length(ENTREZID[!is.na(ENTREZID)])), by = GO]
GO.BP <- GOTerms[sapply(GOTerms, Ontology) == "BP"]
genes.BP <- select(org.Hs.eg.db, names(GO.BP), "ENTREZID", "GO")
genes.BP <- as.data.table(genes.BP)
GO.BP <- genes.BP[, .(Count = length(ENTREZID[!is.na(ENTREZID)])), by = GO]
table(GO.BP$Count > 0)
GO.MF <- GOTerms[sapply(GOTerms, Ontology) == "MF"]
genes.MF <- select(org.Hs.eg.db, names(GO.MF), "ENTREZID", "GO")
genes.MF <- as.data.table(genes.MF)
GO.MF <- genes.MF[, .(Count = length(ENTREZID[!is.na(ENTREZID)])), by = GO]
GO.CC <- GOTerms[sapply(GOTerms, Ontology) == "CC"]
genes.CC <- select(org.Hs.eg.db, names(GO.CC), "ENTREZID", "GO")
genes.CC  <- as.data.table(genes.CC)
GO.CC <- genes.CC[, .(Count = length(ENTREZID[!is.na(ENTREZID)])), by = GO]
table(GO.CC$Count > 0)
table(GO.MF$Count > 0)
GO.BP <- GO.BP[Count > 0, ]
install.packages("tabulizer")
GO.MF <- GO.MF[Count > 0, ]
head(GO.MF)
head(GO.BP)
GO.BP[, GOTerm := go$name[GO.BP$GO]]
head(GO.BP)
head(gense.BP)
head(genes.BP)
setwd("~/nPOD/nPOD-App/DIVE/Ontology")
save(GO.BP, file = "GO.BP.Rdata")
shiny::runApp('~/nPOD/nPOD-App/DIVE')
runApp('~/nPOD/nPOD-App/DIVE')
runApp('~/nPOD/nPOD-App/DIVE')
runApp('~/nPOD/nPOD-App/DIVE')
runApp('~/nPOD/nPOD-App/DIVE')
runApp('~/nPOD/nPOD-App/DIVE')
runApp('~/nPOD/nPOD-App/DIVE')
runApp('~/nPOD/nPOD-App/DIVE')
runApp('~/nPOD/nPOD-App/DIVE')
runApp('~/nPOD/nPOD-App/DIVE')
runApp('~/nPOD/nPOD-App/DIVE')
head(genes.CC)
head(genes.MF)
GO.MF <- genes.MF[, .(Count = length(ENTREZID[!is.na(ENTREZID)])), by = GO]
head(GO.MF)
GO.MF <- GO.MF[Count > 0, ]
GO.CC <- genes.CC[, .(Count = length(ENTREZID[!is.na(ENTREZID)])), by = GO]
GO.CC <- GO.CC[Count > 0, ]
head(GO.CC)
setwd("~/nPOD/nPOD-App/DIVE/Ontology")
save(GO.CC, GO.MF, GO.BP, file = "GObranches.Rdata")
