install.packages("shinydashboard")
?validColors
shiny::runApp('~/DIVE/inst/app')
runApp('~/DIVE/inst/app')
runApp('~/DIVE/inst/app')
runApp('~/DIVE/inst/app')
runApp('~/DIVE/inst/app')
runApp('~/DIVE/inst/app')
runApp('~/DIVE/inst/app')
runApp('~/DIVE/inst/app')
runApp('~/DIVE/inst/app')
runApp('~/DIVE/inst/app')
runApp('~/DIVE/inst/app')
runApp('~/DIVE/inst/app')
runApp('~/DIVE/inst/app')
runApp('~/DIVE/inst/app')
studynetwork
DIVE::studynetwork
library(DIVE)
studynetwork
devtools::load_all()
studynetwork
load("~/DIVE/data/studynetwork.rda")
runApp('~/DIVE/inst/app')
runApp('~/DIVE/inst/app')
runApp('~/DIVE/inst/app')
runApp('~/DIVE/inst/app')
devtools::load_all()
runApp('~/DIVE/inst/app')
runApp('~/DIVE/inst/app')
devtools::load_all()
runApp('~/DIVE/inst/app')
devtools::load_all()
runApp('~/DIVE/inst/app')
document()
devtools::document()
setwd("~/DIVE")
devtools::document()
devtools::load_all()
runApp('inst/app')
shinydashboard::infoBox
devtools::load_all()
runApp('inst/app')
devtools::load_all()
runApp('inst/app')
devtools::load_all()
runApp('inst/app')
devtools::load_all()
runApp('inst/app')
shinydashboard::infoBox
runApp('inst/app')
runApp('inst/app')
devtools::load_all()
document()
devtools::document()
runApp('inst/app')
shinydashboard::infoBox
devtools::load_all()
runApp('inst/app')
devtools::load_all()
runApp('inst/app')
devtools::load_all()
runApp('inst/app')
runApp('inst/app')
runApp('inst/app')
runApp('inst/app')
runApp('inst/app')
runApp('inst/app')
runApp('inst/app')
runApp('inst/app')
runApp('inst/app')
runApp('inst/app')
runApp('inst/app')
runApp('inst/app')
runApp('inst/app')
devtools::load_all()
runApp('inst/app')
devtools::load_all()
runApp('inst/app')
runApp('inst/app')
devtools::load_all()
runApp('inst/app')
shinydashboard::valueBox
runApp('inst/app')
devtools::load_all()
runApp('inst/app')
devtools::load_all()
runApp('inst/app')
devtools::load_all()
runApp('inst/app')
devtools::load_all()
runApp('inst/app')
runApp('inst/app')
runApp('inst/app')
runApp('inst/app')
runApp('inst/app')
runApp('inst/app')
devtools::load_all()
runApp('inst/app')
runApp('inst/app')
devtools::load_all()
runApp('inst/app')
devtools::load_all()
runApp('inst/app')
devtools::load_all()
runApp('inst/app')
devtools::load_all()
runApp('inst/app')
devtools::load_all()
runApp('inst/app')
devtools::load_all()
runApp('inst/app')
runApp('inst/app')
runApp('inst/app')
runApp('inst/app')
devtools::load_all()
runApp('inst/app')
devtools::load_all()
runApp('inst/app')
runApp('inst/app')
runApp('inst/app')
runApp('inst/app')
runApp('inst/app')
runApp('inst/app')
runApp('inst/app')
runApp('inst/app')
runApp('inst/app')
runApp('inst/app')
runApp('inst/app')
head(metadata)
table(metadata$Dimensions)
sum(which(metadata$Dimensions > 300))
which(metadata$Dimensions > 300)
sum(metadata$Dimensions > 300)
sum(metadata$Dimensions > 300, na.rm = T)
length(unique(metadata$Source))
runApp('inst/app')
runApp('inst/app')
head(network)
head(network)
head(studynetwork)
studynetwork$x$nodes
sum(studynetwork$x$nodes$color != "#333333")
metadata$Source
max(metadata$Source)
runApp('inst/app')
runApp('inst/app')
studynetwork$x$edges
(studynetwork$x$edges$weight)^2
median((studynetwork$x$edges$weight)^2)
average((studynetwork$x$edges$weight)^2)
mean((studynetwork$x$edges$weight)^2)
max((studynetwork$x$edges$weight)^2)
quantile((studynetwork$x$edges$weight)^2)
igraph::adjacent_vertices(studynetwork)
setwd("~/DIVE/inst/cdata/curated")
srcnetwork <- connectByCases()
srcnetwork <- igraph::graph_from_adjacency_matrix(srcnetwork, mode = "undirected", weighted = T, diag = F)
igraph::adjacent_vertices(srcnetwork)
igraph::adjacent_vertices(srcnetwork, v = V(scrnetwork))
igraph::adjacent_vertices(srcnetwork, v = igraph::V(scrnetwork))
igraph::adjacent_vertices(srcnetwork, v = igraph::V(srcnetwork))
n <- igraph::adjacent_vertices(srcnetwork, v = igraph::V(srcnetwork))
str(n)
lengths(n)
mean(lengths(n))
median(lengths(n))
usethis::use_data(srcnetwork)
mean((studynetwork$x$edges$weight)^2)
runApp('~/DIVE/inst/app')
round(mean((studynetwork$x$edges$weight)^2), 1)
runApp('~/DIVE/inst/app')
runApp('~/DIVE/inst/app')
curateR()
