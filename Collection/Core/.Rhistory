nrow(cdata)/2
matched
n <- matched[, lapply(.SD, function(x) table(is.na(x))["FALSE"])]
n
n <- sort(unlist(n), decreasing = T)
n
n <- n[n > cutoff]
n <- n[n > 25]
n
n <- n[!names(n) %in% c("ID", "donor.type")]
n
runApp('nPOD-App/DIVE')
runApp('nPOD-App/DIVE')
runApp('nPOD-App/DIVE')
n <- matched[, lapply(.SD, function(x) table(is.na(x))["FALSE"])]
matched <- cdata[1:50]
n <- matched[, lapply(.SD, function(x) table(is.na(x))["FALSE"])]
n
n <- n[n > 25]
melt(n)
n <- melt(n)
n <- n[variable %in% c("ID", "donor.type"), value > 25]
n
n <- matched[, lapply(.SD, function(x) table(is.na(x))["FALSE"])]
n <- melt(n, id.vars = names(n))
n
n <- matched[, lapply(.SD, function(x) table(is.na(x))["FALSE"])]
n <- melt(n, measure.vars = names(n))
n
n[variable %in% c("ID", "donor.type")]
n[!variable %in% c("ID", "donor.type")]
n[!variable %in% c("ID", "donor.type"), value > 25]
n[!variable %in% c("ID", "donor.type") & value > 25]
n <- n[!variable %in% c("ID", "donor.type") & value > cutoff][order(value)]
n <- n[!variable %in% c("ID", "donor.type") & value > 25][order(value)]
n
n <- n[!variable %in% c("ID", "donor.type") & value > 25][order(value, decreasing = T)]
n
runApp('nPOD-App/DIVE')
matched <- fread("match_results.csv")
setwd("~/nPOD")
matched <- fread("match_results.csv")
matched <- fread("match_result.csv")
matched <- matched[grep("nPOD", ID), as.numeric(gsub("nPOD_", "", ID))]
matched
matched <- fread("match_result.csv")
matched
runApp('nPOD-App/DIVE')
runApp('nPOD-App/DIVE')
runApp('nPOD-App/DIVE')
runApp('nPOD-App/DIVE')
runApp('nPOD-App/DIVE')
runApp('nPOD-App/DIVE')
runApp('nPOD-App/DIVE')
runApp('nPOD-App/DIVE')
runApp('nPOD-App/DIVE')
runApp('nPOD-App/DIVE')
runApp('nPOD-App/DIVE')
n
setNames(n$variable, n[, paste0(variable, " (", value, ")")])
runApp('nPOD-App/DIVE')
runApp('nPOD-App/DIVE')
runApp('nPOD-App/DIVE')
unique(c(1, 5, 3, 8))
as.factor(c(1, 5, 3, 8))
runApp('nPOD-App/DIVE')
runApp('nPOD-App/DIVE')
runApp('nPOD-App/DIVE')
runApp('nPOD-App/DIVE')
runApp('nPOD-App/DIVE')
runApp('nPOD-App/DIVE')
runApp('nPOD-App/DIVE')
runApp('nPOD-App/DIVE')
runApp('nPOD-App/DIVE')
runApp('nPOD-App/DIVE')
runApp('nPOD-App/DIVE')
runApp('nPOD-App/DIVE')
runApp('nPOD-App/DIVE')
runApp('nPOD-App/DIVE')
runApp('nPOD-App/DIVE')
runApp('nPOD-App/DIVE')
runApp('nPOD-App/DIVE')
runApp('nPOD-App/DIVE')
runApp('nPOD-App/DIVE')
runApp('nPOD-App/DIVE')
tmp <- cdata[1:50, .(AutoAb.count, donor.type)]
tmp
p <- ggplot(tmp, aes_string(x = "donor.type", y = var, fill = "donor.type")) +
geom_dotplot(binaxis = "y", stackdir = "center") +
scale_fill_manual(values = ppColors) +
labs(title = "") +
theme_bw()
p <- ggplot(tmp, aes_string(x = "donor.type", y = "AutoAb.count", fill = "donor.type")) +
geom_dotplot(binaxis = "y", stackdir = "center") +
scale_fill_manual(values = ppColors) +
labs(title = "") +
theme_bw()
p
runApp('nPOD-App/DIVE')
runApp('nPOD-App/DIVE')
runApp('nPOD-App/DIVE')
runApp('nPOD-App/DIVE')
runApp('nPOD-App/DIVE')
runApp('nPOD-App/DIVE')
runApp('nPOD-App/DIVE')
runApp('nPOD-App/DIVE')
mtcars
runApp('nPOD-App/DIVE')
runApp('nPOD-App/DIVE')
runApp('nPOD-App/DIVE')
runApp('nPOD-App/DIVE')
runApp('nPOD-App/DIVE')
runApp('nPOD-App/DIVE')
runApp('nPOD-App/DIVE')
runApp('nPOD-App/DIVE')
runApp('nPOD-App/DIVE')
runApp('nPOD-App/DIVE')
runApp('nPOD-App/DIVE')
runApp('nPOD-App/DIVE')
tmp
q <- ggplot(tmp2, aes_string(x = var2)) + geom_dotplot(color = "blue") +
theme_bw()
q <- ggplotly(q)
q <- ggplot(tmp2, aes_string(x = var2)) + geom_dotplot(color = "blue") +
theme_bw()
q <- ggplot(tmp, aes_string(x = AutoAb.count)) + geom_dotplot(color = "blue") +
theme_bw()
q <- ggplot(tmp, aes(x = AutoAb.count)) + geom_dotplot(color = "blue") +
theme_bw()
q <- ggplotly(q)
q
q$x
runApp('nPOD-App/DIVE')
runApp('nPOD-App/DIVE')
runApp('nPOD-App/DIVE')
runApp('nPOD-App/DIVE')
runApp('nPOD-App/DIVE')
runApp('nPOD-App/DIVE')
runApp('nPOD-App/DIVE')
runApp('nPOD-App/DIVE')
runApp('nPOD-App/DIVE')
runApp('nPOD-App/DIVE')
runApp('nPOD-App/DIVE')
runApp('nPOD-App/DIVE')
runApp('nPOD-App/DIVE')
runApp('nPOD-App/DIVE')
runApp('nPOD-App/DIVE')
runApp('nPOD-App/DIVE')
runApp('nPOD-App/DIVE')
load("~/nPOD/nPOD-App/DIVE/Data/npodX.Rdata")
library(data.table)
library(plotly)
autoab <- fread("AutoAb_ref.tsv")
demog <- fread("Demographics_ref.tsv")
dinfo <- fread("DiabetesInfo_ref.tsv")
setwd("~/nPOD/nPOD-App/DIVE/Collection/Core")
autoab <- fread("AutoAb_ref.tsv")
demog <- fread("Demographics_ref.tsv")
dinfo <- fread("DiabetesInfo_ref.tsv")
npod <- merge(autoab[!is.na(ID)], demog[!is.na(ID), .(ID, donor.type, age, gender, ethnic.grp, cause.death.cat, BMI)], by = "ID")
npod <- merge(npod, dinfo, by = "ID")
# npod <- merge(npod, riskII, by = "ID")
npod <- npod[donor.type != "Virus infected cell line"]
names(demog)
npod <- merge(autoab[!is.na(ID)], demog[!is.na(ID), .(ID, donor.type, age, sex, ethnic.grp, cause.death.cat, BMI)], by = "ID")
npod <- merge(autoab[!is.na(ID)], demog[!is.na(ID), .(ID, donor.type, age, sex, race, cause.death.cat, BMI)], by = "ID")
npod <- merge(npod, dinfo, by = "ID")
# npod <- merge(npod, riskII, by = "ID")
npod <- npod[donor.type != "Virus infected cell line"]
npod.graph <- copy(npod)
npod.graph[, GADA.pos := factor(GADA.pos, labels = c("", "G", "-"), exclude = NULL)]
npod.graph[, IA2A.pos := factor(IA2A.pos, labels = c("", "I", "-"), exclude = NULL)]
npod.graph[, mIAA.pos := factor(mIAA.pos, labels = c("", "M", "-"), exclude = NULL)]
npod.graph[, ZnT8A.pos := factor(ZnT8A.pos, labels = c("", "Z", "-"), exclude = NULL)]
npod.graph[, Aab.combn := paste0(GADA.pos, IA2A.pos, mIAA.pos, ZnT8A.pos)]
aab.levels <- c("", c("G", "I", "M", "Z"), apply(combn(c("G", "I", "M", "Z"), 2), 2, paste0, collapse = ""),
apply(combn(c("G", "I", "M", "Z"), 3), 2, paste0, collapse = ""), "GIMZ")
npod.graph[, Aab.combn := factor(Aab.combn, levels = aab.levels)]
npod.graph <- npod.graph[, .(ID, donor.type, sex, BMI, race, age, age.onset, db.duration, Aab.combn, AutoAb.count, Cpeptide, peak.gluc, HbA1c)]
ref <- melt(npod.graph, id.vars = c("ID", "donor.type"))
head(ref)
npod.graph[, sex := as.numeric(factor(sex, levels = c("Male", "Female"))) * 33]
npod.graph[, race := as.numeric(factor(race,
levels = c("Caucasian", "Hispanic.Latino", "Multiracial", "AfricanAmerican", "Asian",
"AmIndian.AKnative"))) * 14]
npod.graph[, Aab.combn := as.numeric(Aab.combn) * 6]
npod.graph[, AutoAb.count := AutoAb.count * 25]
npod.graph[, Cpeptide := Cpeptide * 2]
npod.graph[, peak.gluc := peak.gluc/20]
npod.graph[, HbA1c := HbA1c * 7]
npod.graph[, BMI := BMI * 1.9]
for(x in names(npod.graph))  npod.graph[is.na(npod.graph[[x]]), (x) := -30]
npod.graph <- melt(npod.graph, id.vars = c("ID", "donor.type"))
npod.graph$text <- ref[, "value"]
head(npod.graph)
levels(npod.graph$variable) <- c("Sex", "BMI", "Race", "Age", "Age at onset", "Disease duration",
"AutoAb-positive comb", "Autoantibody count", "C-peptide", "Peak glucose", "HbA1C")
NAnodes <- npod.graph[, .(y = -30, count = table(is.na(text))["TRUE"]), by = "variable"]
sexnodes <- npod.graph[variable == "Sex", .(x = unique(variable), y = unique(value), count = length(value)), by = "text"][order(y)]
racenodes <- npod.graph[variable == "Race", .(x = unique(variable), y = unique(value), count = length(value)), by = "text"][!is.na(text)][order(y)]
aabnodes <- npod.graph[variable == "AutoAb-positive comb", .(x = unique(variable), y = unique(value), count = length(value)),
by = "text"][!is.na(text)][order(y)]
aabcnodes <- npod.graph[variable == "Autoantibody count", .(x = unique(variable), y = unique(value), count = length(value)),
by = "text"][!is.na(text)][order(y)]
head(npod.graph)
line <- list(
type = "line",
line = list(color = "black"),
xref = "x",
yref = "y"
)
lines <- list()
for (f in c("BMI", "Age", "Age at onset", "Disease duration", "C-peptide", "Peak glucose", "HbA1C")) {
line[c("x0", "x1")] <- f
line[["y0"]] <- npod.graph[variable == f, min(value, na.rm = T)]
line[["y1"]] <- npod.graph[variable == f, max(value, na.rm = T)]
lines <- c(lines, list(line))
}
npodgraph <- npod.graph %>% group_by(ID) %>%
plot_ly(x = ~variable, y = ~value, hoverinfo = "text", height = 500,
colors = c(ppColors, "Pending" = "gray", "Pregnancy" = "pink", "Transplant" = "darkseagreen4")) %>%
add_lines(color = ~donor.type, alpha = 0.3) %>%
layout(xaxis = ax, yaxis = c(ax, showticklabels = F), shapes = lines, plot_bgcolor = "white")
ppColors <- c("Autoab Pos" = "orange", "Cystic fibrosis" = "aquamarine4", "Gastric Bypass" = "bisque4",
"Gestational diabetes" = "deeppink2", "Monogenic Diabetes" = "red4", "No diabetes" = "royalblue2",
"Other-Diabetes" = "indianred4", "Other-No Diabetes" = "steelblue2", "T1D" = "red",
"T1D Medalist" = "maroon", "T2D" = "purple")
npodgraph <- npod.graph %>% group_by(ID) %>%
plot_ly(x = ~variable, y = ~value, hoverinfo = "text", height = 500,
colors = c(ppColors, "Pending" = "gray", "Pregnancy" = "pink", "Transplant" = "darkseagreen4")) %>%
add_lines(color = ~donor.type, alpha = 0.3) %>%
layout(xaxis = ax, yaxis = c(ax, showticklabels = F), shapes = lines, plot_bgcolor = "white")
ax <- list(
zeroline = FALSE,
showline = FALSE,
# showticklabels = FALSE,
showgrid = FALSE
)
npodgraph <- npod.graph %>% group_by(ID) %>%
plot_ly(x = ~variable, y = ~value, hoverinfo = "text", height = 500,
colors = c(ppColors, "Pending" = "gray", "Pregnancy" = "pink", "Transplant" = "darkseagreen4")) %>%
add_lines(color = ~donor.type, alpha = 0.3) %>%
layout(xaxis = ax, yaxis = c(ax, showticklabels = F), shapes = lines, plot_bgcolor = "white")
npodgraph
lines <- list()
for (f in c("BMI", "Age", "Age at onset", "Disease duration", "C-peptide", "Peak glucose", "HbA1C")) {
line[c("x0", "x1")] <- f
line[["y0"]] <- npod.graph[variable == f, min(value[value > 0], na.rm = T)]
line[["y1"]] <- npod.graph[variable == f, max(value, na.rm = T)]
lines <- c(lines, list(line))
}
npodgraph <- npod.graph %>% group_by(ID) %>%
plot_ly(x = ~variable, y = ~value, hoverinfo = "text", height = 500,
colors = c(ppColors, "Pending" = "gray", "Pregnancy" = "pink", "Transplant" = "darkseagreen4")) %>%
add_lines(color = ~donor.type, alpha = 0.3) %>%
layout(xaxis = ax, yaxis = c(ax, showticklabels = F), shapes = lines, plot_bgcolor = "white")
npodgraph
ax <- list(
title = "",
zeroline = FALSE,
showline = FALSE,
# showticklabels = FALSE,
showgrid = FALSE
)
npodgraph <- npodgraph %>% add_trace(data = NAnodes, type = "scatter", mode = "markers", name = "Not applicable/Not available",
x = ~variable, y = ~y, size = ~count,
text = ~paste(variable, "|", count, "NA"), hoverinfo = "text",
marker = list(color = "black", sizeref = 0.2))
npodgraph <- npodgraph %>% add_trace(data = sexnodes, type = "scatter", mode = "markers", name = "Sex",
x = ~x, y = ~y, size = ~count, key = "node",
text = ~paste(text, "| n =", count), hoverinfo = "text",
marker = list(color = c("turquoise", "hotpink"), sizeref = 0.2),
showlegend = F)
npodgraph <- npodgraph %>% add_trace(data = racenodes, type = "scatter", mode = "markers",
x = ~x, y = ~y, size = ~count, key = "node",
text = ~paste(text, "| n =", count), hoverinfo = "text",
marker = list(color = c("white", "orange", "gray", "saddlebrown", "yellow", "indianred", "springgreen"), sizeref = 0.2),
showlegend = F)
npodgraph <- npodgraph %>% add_trace(data = aabnodes, type = "scatter", mode = "markers",
x = ~x, y = ~y, size = ~count, key = "node",
text = ~paste(text, "| n =", count), hoverinfo = "text",
marker = list(color = c("#440154FF", rep("#2A788EFF", 4), rep("#22A884FF", 5), rep("#7AD151FF", 4), "#FDE725FF"), sizeref = 0.2),
showlegend = F)
npodgraph <- npodgraph %>% add_trace(data = aabcnodes, type = "scatter", mode = "markers",
x = ~x, y = ~y, size = ~count, key = "node",
text = ~paste("positive for", text, "| n =", count), hoverinfo = "text",
marker = list(color = c("#440154FF", "#2A788EFF", "#22A884FF", "#7AD151FF", "#FDE725FF"), sizeref = 0.2),
showlegend = F)
npodgraph
unique(npod$race)
paste0(c("GAD", "IA2", "mIA", "ZnT8"), collapse = ", ")
paste0(c("GAD", "", "mIA", "ZnT8"), collapse = ", ")
paste0(c("", "", "", character(0)), collapse = ", ")
paste0(c("", "", "", "", collapse = ", ")
)
paste0(c("", "", "", ""), collapse = ", ")
npod.graph <- copy(npod)
# all dimensions to be rescaled 1-100
npod.graph[, GADA.pos := factor(GADA.pos, labels = c("", "GAD", "-"), exclude = NULL)]
npod.graph[, IA2A.pos := factor(IA2A.pos, labels = c("", "IA2", "-"), exclude = NULL)]
npod.graph[, mIAA.pos := factor(mIAA.pos, labels = c("", "mIA", "-"), exclude = NULL)]
npod.graph[, ZnT8A.pos := factor(ZnT8A.pos, labels = c("", "ZnT8", "-"), exclude = NULL)]
npod.graph[, Aab.combn := paste0(GADA.pos, IA2A.pos, mIAA.pos, ZnT8A.pos, collapse = ", ")]
npod.graph[, Aab.combn := gsub(", , , ", "none", Aab.combn)]
aab.levels <- c("none", c("GAD", "IA2", "mIA", "ZnT8"), apply(combn(c("GAD", "IA2", "mIA", "ZnT8"), 2), 2, paste0, collapse = ", "),
apply(combn(c("GAD", "IA2", "mIA", "ZnT8"), 3), 2, paste0, collapse = ", "), paste0(c("GAD", "IA2", "mIA", "ZnT8"), collapse = ", "))
npod.graph[, Aab.combn := factor(Aab.combn, levels = aab.levels)]
npod.graph <- npod.graph[, .(ID, donor.type, sex, BMI, race, age, age.onset, db.duration, Aab.combn, AutoAb.count, Cpeptide, peak.gluc, HbA1c)]
ref <- melt(npod.graph, id.vars = c("ID", "donor.type"))
# Convert to coordinates
npod.graph[, sex := as.numeric(factor(sex, levels = c("Male", "Female"))) * 33]
npod.graph[, race := as.numeric(factor(race,
levels = c("Caucasian", "Hispanic.Latino", "Multiracial", "AfricanAmerican", "Asian",
"AmericanIndian.AlaskaNative"))) * 14]
npod.graph[, Aab.combn := as.numeric(Aab.combn) * 6]
npod.graph[, AutoAb.count := AutoAb.count * 25]
npod.graph[, Cpeptide := Cpeptide * 2]
npod.graph[, peak.gluc := peak.gluc/20]
npod.graph[, HbA1c := HbA1c * 7]
npod.graph[, BMI := BMI * 1.9]
for(x in names(npod.graph))  npod.graph[is.na(npod.graph[[x]]), (x) := -30]
npod.graph <- melt(npod.graph, id.vars = c("ID", "donor.type"))
npod.graph$text <- ref[, "value"]
levels(npod.graph$variable) <- c("Sex", "BMI", "Race", "Age", "Age at onset", "Disease duration",
"AutoAb-positive comb", "Autoantibody count", "C-peptide", "Peak glucose", "HbA1C")
NAnodes <- npod.graph[, .(y = -30, count = table(is.na(text))["TRUE"]), by = "variable"]
sexnodes <- npod.graph[variable == "Sex", .(x = unique(variable), y = unique(value), count = length(value)), by = "text"][order(y)]
racenodes <- npod.graph[variable == "Race", .(x = unique(variable), y = unique(value), count = length(value)), by = "text"][!is.na(text)][order(y)]
aabnodes <- npod.graph[variable == "AutoAb-positive comb", .(x = unique(variable), y = unique(value), count = length(value)),
by = "text"][!is.na(text)][order(y)]
aabcnodes <- npod.graph[variable == "Autoantibody count", .(x = unique(variable), y = unique(value), count = length(value)),
by = "text"][!is.na(text)][order(y)]
npodgraph <- npod.graph %>% group_by(ID) %>%
plot_ly(x = ~variable, y = ~value, hoverinfo = "text", height = 500,
colors = c(ppColors, "Pending" = "gray", "Pregnancy" = "pink", "Transplant" = "darkseagreen4")) %>%
add_lines(color = ~donor.type, alpha = 0.3) %>%
layout(xaxis = ax, yaxis = c(ax, showticklabels = F), shapes = lines, plot_bgcolor = "white")
# Add nodes for categorical axes
npodgraph <- npodgraph %>% add_trace(data = NAnodes, type = "scatter", mode = "markers", name = "Not applicable/Not available",
x = ~variable, y = ~y, size = ~count,
text = ~paste(variable, "|", count, "NA"), hoverinfo = "text",
marker = list(color = "black", sizeref = 0.2))
npodgraph <- npodgraph %>% add_trace(data = sexnodes, type = "scatter", mode = "markers", name = "Sex",
x = ~x, y = ~y, size = ~count, key = "node",
text = ~paste(text, "| n =", count), hoverinfo = "text",
marker = list(color = c("turquoise", "hotpink"), sizeref = 0.2),
showlegend = F)
npodgraph <- npodgraph %>% add_trace(data = racenodes, type = "scatter", mode = "markers",
x = ~x, y = ~y, size = ~count, key = "node",
text = ~paste(text, "| n =", count), hoverinfo = "text",
marker = list(color = c("white", "orange", "gray", "saddlebrown", "yellow", "indianred", "springgreen"), sizeref = 0.2),
showlegend = F)
npodgraph <- npodgraph %>% add_trace(data = aabnodes, type = "scatter", mode = "markers",
x = ~x, y = ~y, size = ~count, key = "node",
text = ~paste(text, "| n =", count), hoverinfo = "text",
marker = list(color = c("#440154FF", rep("#2A788EFF", 4), rep("#22A884FF", 5), rep("#7AD151FF", 4), "#FDE725FF"), sizeref = 0.2),
showlegend = F)
npodgraph <- npodgraph %>% add_trace(data = aabcnodes, type = "scatter", mode = "markers",
x = ~x, y = ~y, size = ~count, key = "node",
text = ~paste("positive for", text, "| n =", count), hoverinfo = "text",
marker = list(color = c("#440154FF", "#2A788EFF", "#22A884FF", "#7AD151FF", "#FDE725FF"), sizeref = 0.2),
showlegend = F)
npodgraph
npodgraph <- npod.graph %>% group_by(ID) %>%
plot_ly(x = ~variable, y = ~value, hoverinfo = "text", height = 500,
colors = c(ppColors, "Pending" = "gray", "Pregnancy" = "pink", "Transplant" = "darkseagreen4")) %>%
add_lines(color = ~donor.type, alpha = 0.3) %>%
layout(xaxis = ax, yaxis = c(ax, showticklabels = F), shapes = lines, plot_bgcolor = "white")
# Add nodes for categorical axes
npodgraph <- npodgraph %>% add_trace(data = NAnodes, type = "scatter", mode = "markers", name = "Not applicable/Not available",
x = ~variable, y = ~y, size = ~count,
text = ~paste(variable, "|", count, "NA"), hoverinfo = "text",
marker = list(color = "black", sizeref = 0.2))
npodgraph <- npodgraph %>% add_trace(data = sexnodes, type = "scatter", mode = "markers", name = "Sex",
x = ~x, y = ~y, size = ~count,
text = ~paste(text, "| n =", count), hoverinfo = "text",
marker = list(color = c("turquoise", "hotpink"), sizeref = 0.2),
showlegend = F)
npodgraph <- npodgraph %>% add_trace(data = racenodes, type = "scatter", mode = "markers",
x = ~x, y = ~y, size = ~count,
text = ~paste(text, "| n =", count), hoverinfo = "text",
marker = list(color = c("white", "orange", "gray", "saddlebrown", "yellow", "indianred", "springgreen"), sizeref = 0.2),
showlegend = F)
npodgraph <- npodgraph %>% add_trace(data = aabnodes, type = "scatter", mode = "markers",
x = ~x, y = ~y, size = ~count,
text = ~paste(text, "| n =", count), hoverinfo = "text",
marker = list(color = c("#440154FF", rep("#2A788EFF", 4), rep("#22A884FF", 5), rep("#7AD151FF", 4), "#FDE725FF"), sizeref = 0.2),
showlegend = F)
npodgraph <- npodgraph %>% add_trace(data = aabcnodes, type = "scatter", mode = "markers",
x = ~x, y = ~y, size = ~count,
text = ~paste("positive for", text, "| n =", count), hoverinfo = "text",
marker = list(color = c("#440154FF", "#2A788EFF", "#22A884FF", "#7AD151FF", "#FDE725FF"), sizeref = 0.2),
showlegend = F)
npodgraph
head(npod.graph)
npodgraph <- npod.graph %>% group_by(ID) %>%
plot_ly(x = ~variable, y = ~value, hoverinfo = "text", height = 500,
colors = c(ppColors, "Pending" = "gray", "Pregnancy" = "pink", "Transplant" = "darkseagreen4")) %>%
add_lines(color = ~donor.type, alpha = 0.3) %>%
layout(xaxis = ax, yaxis = c(ax, showticklabels = F), shapes = lines, plot_bgcolor = "white")
# Add nodes for categorical axes
npodgraph <- npodgraph %>% add_trace(data = NAnodes, type = "scatter", mode = "markers", name = "Not applicable/Not available",
x = ~variable, y = ~y, size = ~count,
text = ~paste(variable, "|", count, "NA"), hoverinfo = "text",
marker = list(color = "black", sizeref = 0.2))
npodgraph
aab.levels
npod.graph <- copy(npod)
# all dimensions to be rescaled 1-100
npod.graph[, GADA.pos := factor(GADA.pos, labels = c("", "GAD", "-"), exclude = NULL)]
npod.graph[, IA2A.pos := factor(IA2A.pos, labels = c("", "IA2", "-"), exclude = NULL)]
npod.graph[, mIAA.pos := factor(mIAA.pos, labels = c("", "mIA", "-"), exclude = NULL)]
npod.graph[, ZnT8A.pos := factor(ZnT8A.pos, labels = c("", "ZnT8", "-"), exclude = NULL)]
npod.graph[, Aab.combn := paste0(GADA.pos, IA2A.pos, mIAA.pos, ZnT8A.pos, collapse = ", ")]
npod.graph$Aab.combn
npod.graph[, Aab.combn := paste0(c(GADA.pos, IA2A.pos, mIAA.pos, ZnT8A.pos), collapse = ", ")]
npod.graph$Aab.combn
npod.graph[, Aab.combn := apply(.SD, 1, paste0, collapse = ", "), .SDcols = c("GADA.pos", "IA2A.pos", "mIAA.pos", "ZnT8A.pos")]
npod.graph$Aab.combn
npod.graph <- copy(npod)
# all dimensions to be rescaled 1-100
npod.graph[, GADA.pos := factor(GADA.pos, labels = c("", "G", "-"), exclude = NULL)]
npod.graph[, IA2A.pos := factor(IA2A.pos, labels = c("", "I", "-"), exclude = NULL)]
npod.graph[, mIAA.pos := factor(mIAA.pos, labels = c("", "M", "-"), exclude = NULL)]
npod.graph[, ZnT8A.pos := factor(ZnT8A.pos, labels = c("", "Z", "-"), exclude = NULL)]
npod.graph[, Aab.combn := paste0(GADA.pos, IA2A.pos, mIAA.pos, ZnT8A.pos)]
aab.levels <- c("none", c("G", "I", "M", "Z"), apply(combn(c("G", "I", "M", "Z"), 2), 2, paste0, collapse = ""),
apply(combn(c("G", "I", "M", "Z"), 3), 2, paste0, collapse = ""), paste0(c("G", "I", "M", "Z"), collapse = ""))
npod.graph[, Aab.combn := factor(Aab.combn, levels = aab.levels)]
npod.graph$Aab.combn
npod.graph[, Aab.combn := paste0(GADA.pos, IA2A.pos, mIAA.pos, ZnT8A.pos)]
aab.levels <- c("n", c("G", "I", "M", "Z"), apply(combn(c("G", "I", "M", "Z"), 2), 2, paste0, collapse = ""),
apply(combn(c("G", "I", "M", "Z"), 3), 2, paste0, collapse = ""), paste0(c("G", "I", "M", "Z"), collapse = ""))
npod.graph[, Aab.combn := factor(Aab.combn, levels = aab.levels)]
npod.graph[, Aab.combn := paste0(GADA.pos, IA2A.pos, mIAA.pos, ZnT8A.pos)]
aab.levels <- c("", c("G", "I", "M", "Z"), apply(combn(c("G", "I", "M", "Z"), 2), 2, paste0, collapse = ""),
apply(combn(c("G", "I", "M", "Z"), 3), 2, paste0, collapse = ""), paste0(c("G", "I", "M", "Z"), collapse = ""))
npod.graph[, Aab.combn := factor(Aab.combn, levels = aab.levels)]
npod.graph$Aab.combn
levels(npod.graph$Aab.combn)
levels(npod.graph$Aab.combn) %>% gsub("G", "GAD")
levels(npod.graph$Aab.combn) %>% gsub(pattern = "G", replacement = "GAD")
unabbreviated <- levels(npod.graph$Aab.combn) %>%
gsub(pattern = "G", replacement = "GAD, ") %>%
gsub(pattern = "I", replacement = "IA2, ") %>%
gsub(pattern = "M", replacement = "mIA, ") %>%
gsub(pattern = "Z", replacement = "ZnT8, ")
unabbreviated
unabbreviated <- levels(npod.graph$Aab.combn) %>%
gsub(pattern = "G", replacement = "GAD, ") %>%
gsub(pattern = "I", replacement = "IA2, ") %>%
gsub(pattern = "M", replacement = "mIA, ") %>%
gsub(pattern = "Z", replacement = "ZnT8, ") %>%
gsub(pattern = ", $", replacement = "")
unabbreviated
levels(npod.graph$Aab.combn) <- unabbreviated
npod.graph <- npod.graph[, .(ID, donor.type, sex, BMI, race, age, age.onset, db.duration, Aab.combn, AutoAb.count, Cpeptide, peak.gluc, HbA1c)]
ref <- melt(npod.graph, id.vars = c("ID", "donor.type"))
# Convert to coordinates
npod.graph[, sex := as.numeric(factor(sex, levels = c("Male", "Female"))) * 33]
npod.graph[, race := as.numeric(factor(race,
levels = c("Caucasian", "Hispanic.Latino", "Multiracial", "AfricanAmerican", "Asian",
"AmericanIndian.AlaskaNative"))) * 14]
npod.graph[, Aab.combn := as.numeric(Aab.combn) * 6]
npod.graph[, AutoAb.count := AutoAb.count * 25]
npod.graph[, Cpeptide := Cpeptide * 2]
npod.graph[, peak.gluc := peak.gluc/20]
npod.graph[, HbA1c := HbA1c * 7]
npod.graph[, BMI := BMI * 1.9]
for(x in names(npod.graph))  npod.graph[is.na(npod.graph[[x]]), (x) := -30]
npod.graph <- melt(npod.graph, id.vars = c("ID", "donor.type"))
npod.graph$text <- ref[, "value"]
levels(npod.graph$variable) <- c("Sex", "BMI", "Race", "Age", "Age at onset", "Disease duration",
"AutoAb-positive comb", "Autoantibody count", "C-peptide", "Peak glucose", "HbA1C")
NAnodes <- npod.graph[, .(y = -30, count = table(is.na(text))["TRUE"]), by = "variable"]
sexnodes <- npod.graph[variable == "Sex", .(x = unique(variable), y = unique(value), count = length(value)), by = "text"][order(y)]
racenodes <- npod.graph[variable == "Race", .(x = unique(variable), y = unique(value), count = length(value)), by = "text"][!is.na(text)][order(y)]
aabnodes <- npod.graph[variable == "AutoAb-positive comb", .(x = unique(variable), y = unique(value), count = length(value)),
by = "text"][!is.na(text)][order(y)]
aabcnodes <- npod.graph[variable == "Autoantibody count", .(x = unique(variable), y = unique(value), count = length(value)),
by = "text"][!is.na(text)][order(y)]
npodgraph <- npod.graph %>% group_by(ID) %>%
plot_ly(x = ~variable, y = ~value, hoverinfo = "text", height = 500,
colors = c(ppColors, "Pending" = "gray", "Pregnancy" = "pink", "Transplant" = "darkseagreen4")) %>%
add_lines(color = ~donor.type, alpha = 0.3) %>%
layout(xaxis = ax, yaxis = c(ax, showticklabels = F), shapes = lines, plot_bgcolor = "white")
# Add nodes for categorical axes
npodgraph <- npodgraph %>% add_trace(data = NAnodes, type = "scatter", mode = "markers", name = "Not applicable/Not available",
x = ~variable, y = ~y, size = ~count,
text = ~paste(variable, "|", count, "NA"), hoverinfo = "text",
marker = list(color = "black", sizeref = 0.2))
npodgraph <- npodgraph %>% add_trace(data = sexnodes, type = "scatter", mode = "markers", name = "Sex",
x = ~x, y = ~y, size = ~count,
text = ~paste(text, "| n =", count), hoverinfo = "text",
marker = list(color = c("turquoise", "hotpink"), sizeref = 0.2),
showlegend = F)
npodgraph <- npodgraph %>% add_trace(data = racenodes, type = "scatter", mode = "markers",
x = ~x, y = ~y, size = ~count,
text = ~paste(text, "| n =", count), hoverinfo = "text",
marker = list(color = c("white", "orange", "gray", "saddlebrown", "yellow", "indianred", "springgreen"), sizeref = 0.2),
showlegend = F)
npodgraph <- npodgraph %>% add_trace(data = aabnodes, type = "scatter", mode = "markers",
x = ~x, y = ~y, size = ~count,
text = ~paste(text, "| n =", count), hoverinfo = "text",
marker = list(color = c("#440154FF", rep("#2A788EFF", 4), rep("#22A884FF", 5), rep("#7AD151FF", 4), "#FDE725FF"), sizeref = 0.2),
showlegend = F)
npodgraph <- npodgraph %>% add_trace(data = aabcnodes, type = "scatter", mode = "markers",
x = ~x, y = ~y, size = ~count,
text = ~paste("positive for", text, "| n =", count), hoverinfo = "text",
marker = list(color = c("#440154FF", "#2A788EFF", "#22A884FF", "#7AD151FF", "#FDE725FF"), sizeref = 0.2),
showlegend = F)
npodgraph
